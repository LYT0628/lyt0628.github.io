<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机器学习 on My New Hugo Site</title>
    <link>http://localhost:1313/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 05 May 2024 02:27:31 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PyTorch 张量</title>
      <link>http://localhost:1313/posts/pytorch_tensor-2024-05-12/</link>
      <pubDate>Sun, 05 May 2024 02:27:31 +0800</pubDate>
      <guid>http://localhost:1313/posts/pytorch_tensor-2024-05-12/</guid>
      <description>Table of Contents 创建张量 从Python 类型创建 从 numpy类型创建 torch.Tensor 转 Numpy 从已有的 torch.Tensor 创建 创建高斯分布张量 创建零张量 张量类型转换 张量形状操作 获取张量形状 修改张量形状 转置 维度压缩 原型和子视图 切片 拼接 四则运算 矩阵乘法 其他 创建张量 从Python 类型创建 import torch x1 = [1, 2, 3] x1_tensor = torch.tensor(x1, dtype=torch.int32) print(x1_tensor) 从 torch.Tensor 构建默认是 torch.float32 类型&#xA;import torch x1 = [1, 2, 3] x1_tensor = torch.Tensor(x1) print(x1_tensor) 从 numpy类型创建 import numpy as np import torch x2_numpy = np.array( [1, 2, 3]) x2_tensor = torch.</description>
    </item>
  </channel>
</rss>
